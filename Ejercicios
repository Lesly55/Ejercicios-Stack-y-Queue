public class Porgrama {

	public static void main(String[] args) {
		//Haciendo array con push
		MyStack myStack = new MyStack(5);
		myStack.push('a');
		myStack.push('n');
		myStack.push('a');
		myStack.push('a');
		
		for(int i = 0; i < myStack.stack.length;i++) {
			System.out.println(myStack.stack[i]);
		}
		System.out.print("\n");
		
		//Sacando ultimo caracter con pop
		myStack.pop();
		
		for(int i = 0; i < myStack.stack.length;i++) {
			System.out.println(myStack.stack[i]);
		}
		
		//Construyendo array con add
		MyQueue myQu = new MyQueue(5);
		myQu.add('h');
		myQu.add('o');
		myQu.add('l');
		myQu.add('a');
		
		
		for(int i = 0; i < myQu.queue.length;i++) {
			System.out.println(myQu.queue[i]);
		}
		//Eliminando primer elemento con delete
		myQu.delete();
		myQu.delete();

		//Pruebas de metodos invertirCadena y isPalindromo
		System.out.println(invertirCadena("Anita lava la tina"));
		System.out.println(isPalindromo("Anita lava la tina"));

	}
	
	public static String invertirCadena(String k) {
		//convertir string a char array
		MyStack stackOg = new MyStack(k.length());
		int length = k.length();
		char[] newStack = new char[length];
		for(int i =  0; i < stackOg.stack.length; i++) {
			stackOg.push(k.charAt(i));
		}
		//pasar elementos del string a nuevo char invertido
		for(int i = 0; i < stackOg.stack.length; i++) {
			newStack[i] = stackOg.pop();
		}
		//convertir char a String
		String newString = String.valueOf(newStack);
		return newString;
	}
	

	public static boolean isPalindromo(String k) {
		return (k.replaceAll("\\s", "").toLowerCase().equals((invertirCadena(k)).replaceAll("\\s", "").toLowerCase()));
    }
	
}
